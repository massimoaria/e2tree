[{"path":"https://massimoaria.github.io/e2tree/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Massimo Aria Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://massimoaria.github.io/e2tree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Massimo Aria. Author, maintainer, copyright holder.","code":""},{"path":"https://massimoaria.github.io/e2tree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aria M (2023). e2tree: Creating Explainable Tree Ensemble Tree Structure. R package version 0.0.1, https://github.com/massimoaria/e2tree.","code":"@Manual{,   title = {e2tree: Creating An Explainable Tree From An Ensemble Tree Structure},   author = {Massimo Aria},   year = {2023},   note = {R package version 0.0.1},   url = {https://github.com/massimoaria/e2tree}, }"},{"path":"https://massimoaria.github.io/e2tree/index.html","id":"explainable-ensemble-trees-e2tree","dir":"","previous_headings":"","what":"Creating An Explainable Tree From An Ensemble Tree Structure","title":"Creating An Explainable Tree From An Ensemble Tree Structure","text":"Explainable Ensemble Trees (E2Tree) key idea consists definition algorithm represent every ensemble approach based decision trees model using single tree-like structure. goal explain results esemble algorithm preserving level accuracy, always outperforms provided decision tree. proposed method based identifying relationship tree-like structure explaining classification regression paths summarizing whole ensemble process. two main advantages E2Tree: - building explainable tree ensures predictive performance RF model - allowing decision-maker manage intuitive structure (tree-like structure). example, focus Random Forest , , algorithm can generalized every ensemble approach based decision trees.","code":""},{"path":"https://massimoaria.github.io/e2tree/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Creating An Explainable Tree From An Ensemble Tree Structure","text":"can install developer version e2tree GitHub :","code":"install.packages(\"remotes\") remotes::install_github(\"massimoaria/e2tree\") require(e2tree) require(tidyverse) options(dplyr.summarise.inform = FALSE) require(randomForest) require(Matrix) require(future.apply)"},{"path":"https://massimoaria.github.io/e2tree/index.html","id":"warnings","dir":"","previous_headings":"","what":"Warnings","title":"Creating An Explainable Tree From An Ensemble Tree Structure","text":"package still development therefore, time , following limitations: ensembles trained randomforest package supported. Additional packages approaches supported future; Currently e2tree works case ofu classification problems. gradually extended problems related nature response variable: regression, counting, multivariate response, etc.","code":""},{"path":"https://massimoaria.github.io/e2tree/index.html","id":"example-1-iris-dataset","dir":"","previous_headings":"","what":"Example 1: IRIS dataset","title":"Creating An Explainable Tree From An Ensemble Tree Structure","text":"example, want show main functions e2tree package. Starting IRIS dataset, train ensemble tree using randomforest package subsequently use e2tree obtain explainable tree synthesis ensemble classifier. Train Random Forest model 1000 weak learners , create dissimilarity matrix observations createDisMatrix function setting e2tree parameters Build explainable tree RF Let’s look output Prediction new tree (example training) Comparison predictions (training sample) RF e2tree Comparison predictions (training sample) RF correct response Comparison predictions (training sample) e2tree correct response Variable Importance  Comparison validation sample Comparison predictions (sample validation) RF e2tree Comparison predictions (validation sample) RF correct response  Comparison predictions (validation sample) e2tree correct response","code":"# Set random seed to make results reproducible: set.seed(0) # Calculate the size of each of the data sets: data_set_size <- floor(nrow(iris)/2) # Generate a random sample of \"data_set_size\" indexes indexes <- sample(1:nrow(iris), size = data_set_size) # Assign the data to the correct sets training <- iris[indexes,] validation <- iris[-indexes,] response_training <- training[,5] response_validation <- validation[,5] # Perform training: rf = randomForest(Species ~ ., data=training, ntree=1000, mtry=2, importance=TRUE, keep.inbag = TRUE, proximity=T) D <- createDisMatrix(rf, data=training) #>  #> Analized  100  trees #> Analized  200  trees #> Analized  300  trees #> Analized  400  trees #> Analized  500  trees #> Analized  600  trees #> Analized  700  trees #> Analized  800  trees #> Analized  900  trees #> Analized  1000  trees #dis <- 1-rf$proximity setting=list(impTotal=0.1, maxDec=0.01, n=5, level=5, tMax=5) tree <- e2tree(D, training[,-5], response_training, setting) #> [1] 1 #> [1] 2 #> [1] 3 #> [1] 6 #> [1] 13 #> [1] 12 #> [1] 7 tree %>% glimpse() #> Rows: 7 #> Columns: 19 #> $ node          <dbl> 1, 2, 3, 6, 7, 12, 13 #> $ n             <int> 75, 29, 46, 20, 26, 16, 4 #> $ pred          <chr> \"setosa\", \"setosa\", \"virginica\", \"versicolor\", \"virginic… #> $ prob          <chr> \"0.386666666666667\", \"1\", \"0.58695652173913\", \"0.95\", \"1… #> $ impTotal      <dbl> 0.69895205, 0.01628657, 0.58135876, 0.31262187, 0.129637… #> $ impChildren   <dbl> 0.3628642, NA, 0.2091960, 0.2283824, NA, NA, NA #> $ decImp        <dbl> 0.33608788, NA, 0.37216271, 0.08423945, NA, NA, NA #> $ decImpSur     <dbl> 0.24963733, NA, 0.33018530, 0.02263852, NA, NA, NA #> $ variable      <chr> \"Petal.Length\", NA, \"Petal.Width\", \"Petal.Length\", NA, N… #> $ split         <dbl> 53, NA, 92, 64, NA, NA, NA #> $ splitLabel    <chr> \"Petal.Length <=1.9\", NA, \"Petal.Width <=1.7\", \"Petal.Le… #> $ variableSur   <chr> \"Petal.Width\", NA, \"Petal.Length\", \"Petal.Width\", NA, NA… #> $ splitLabelSur <chr> \"Petal.Width <=0.6\", NA, \"Petal.Length <=4.7\", \"Petal.Wi… #> $ parent        <dbl> 0, 1, 1, 3, 3, 6, 6 #> $ children      <list> <2, 3>, NA, <6, 7>, <12, 13>, NA, NA, NA #> $ terminal      <lgl> FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE #> $ obs           <list> <1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, … #> $ path          <chr> \"\", \"Petal.Length <=1.9\", \"!Petal.Length <=1.9\", \"!Petal… #> $ pred_val      <dbl> 1, 1, 3, 2, 3, 2, 2 pred <- ePredTree(tree, training[,-5], target=\"virginica\") #> [1] 1 #> [1] 2 #> [1] 3 #> [1] 4 table(pred$fit,rf$predicted) #>              #>              setosa versicolor virginica #>   setosa         29          0         0 #>   versicolor      0         18         2 #>   virginica       0          0        26 table(rf$predicted, response_training) #>             response_training #>              setosa versicolor virginica #>   setosa         29          0         0 #>   versicolor      0         17         1 #>   virginica       0          2        26 table(pred$fit,response_training) #>             response_training #>              setosa versicolor virginica #>   setosa         29          0         0 #>   versicolor      0         19         1 #>   virginica       0          0        26 rfimp <- rf$importance %>% as.data.frame %>%    mutate(Variable = rownames(rf$importance),          RF_Var_Imp = round(MeanDecreaseAccuracy,2)) %>%    select(Variable, RF_Var_Imp)  V <- vimp(tree, response_training, training[,-5]) V <- V %>% select(.data$Variable, .data$MeanImpurityDecrease, .data$`ImpDec_ setosa`, .data$`ImpDec_ versicolor`,.data$`ImpDec_ virginica`) %>%    mutate_at(c(\"MeanImpurityDecrease\",\"ImpDec_ setosa\", \"ImpDec_ versicolor\",\"ImpDec_ virginica\"), round,2) %>%    left_join(rfimp, by = \"Variable\") %>%    select(Variable, RF_Var_Imp, MeanImpurityDecrease, starts_with(\"ImpDec\")) %>%    rename(ETree_Var_Imp = MeanImpurityDecrease)  V #> # A tibble: 2 × 6 #>   Variable     RF_Var_Imp ETree_Var_Imp `ImpDec_ setosa` `ImpDec_ versicolor` #>   <chr>             <dbl>         <dbl>            <dbl>                <dbl> #> 1 Petal.Length       0.27          0.36             0.34                 0.02 #> 2 Petal.Width        0.34          0.23            NA                   NA    #> # … with 1 more variable: `ImpDec_ virginica` <dbl> rf.pred <- predict(rf, validation[,-5], proximity = TRUE)  pred_val<- ePredTree(tree, validation[,-5], target=\"virginica\") #> [1] 1 #> [1] 2 #> [1] 3 #> [1] 4 table(pred_val$fit,rf.pred$predicted) #>              #>              setosa versicolor virginica #>   setosa         21          0         0 #>   versicolor      0         34         0 #>   virginica       0          0        20 table(rf.pred$predicted, response_validation) #>             response_validation #>              setosa versicolor virginica #>   setosa         21          0         0 #>   versicolor      0         30         4 #>   virginica       0          1        19 rf.prob <- predict(rf, validation[,-5], proximity = TRUE, type=\"prob\") roc_rf <- roc(response_validation,rf.prob$predicted[,\"virginica\"],target=\"virginica\") roc_rf$auc #> [1] 0.9873725 table(pred_val$fit,response_validation) #>             response_validation #>              setosa versicolor virginica #>   setosa         21          0         0 #>   versicolor      0         30         4 #>   virginica       0          1        19 roc_res <- roc(response_validation,pred_val$score,target=\"virginica\") roc_res$auc #> [1] 0.96395"},{"path":"https://massimoaria.github.io/e2tree/reference/createDisMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissimilarity matrix — createDisMatrix","title":"Dissimilarity matrix — createDisMatrix","text":"function crateDisMatrix creates dissimilarity matrix among observations ensemble tree","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/createDisMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissimilarity matrix — createDisMatrix","text":"","code":"createDisMatrix(ensemble, data)"},{"path":"https://massimoaria.github.io/e2tree/reference/createDisMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dissimilarity matrix — createDisMatrix","text":"ensemble ensemble tree object (moment ensemble works rf objects) data training dataset used ensemble learning","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/createDisMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dissimilarity matrix — createDisMatrix","text":"dissimilarity matrix.","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/e2tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Explainable Ensemble Tree — e2tree","title":"Explainable Ensemble Tree — e2tree","text":"creates explainable tree Random Forest","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/e2tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explainable Ensemble Tree — e2tree","text":"","code":"e2tree(   formula,   data,   D,   setting = list(impTotal = 0.1, maxDec = 0.01, n = 5, level = 5, tMax = 5),   method = \"classification\" )"},{"path":"https://massimoaria.github.io/e2tree/reference/e2tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explainable Ensemble Tree — e2tree","text":"formula formula, response interaction terms. data data frame interpret variables named formula. D dissimilarity matrix. setting list containing setting parameters tree building procedure. method character... Default setting=list(impTotal=0.1, maxDec=0.01, n=5, level=5, tMax=5).","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/e2tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explainable Ensemble Tree — e2tree","text":"e2tree object. #examples","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/ePredTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict responses through an explainable RF — ePredTree","title":"Predict responses through an explainable RF — ePredTree","text":"predicts classification tree responses","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/ePredTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict responses through an explainable RF — ePredTree","text":"","code":"ePredTree(fit, data, target = \"1\")"},{"path":"https://massimoaria.github.io/e2tree/reference/ePredTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict responses through an explainable RF — ePredTree","text":"fit e2tree object data data frame target target value response","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/ePredTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict responses through an explainable RF — ePredTree","text":"object. #examples","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roc curve — roc","title":"Roc curve — roc","text":"calculates roc curve","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roc curve — roc","text":"","code":"roc(response, scores, target = \"1\")"},{"path":"https://massimoaria.github.io/e2tree/reference/roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roc curve — roc","text":"response response variable vector scores probability vector prediction target target response class","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roc curve — roc","text":"object. #examples","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/rpart2Tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a e2tree into an rpart object — rpart2Tree","title":"Convert a e2tree into an rpart object — rpart2Tree","text":"converts e2tree rpart object","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/rpart2Tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a e2tree into an rpart object — rpart2Tree","text":"","code":"rpart2Tree(fit)"},{"path":"https://massimoaria.github.io/e2tree/reference/rpart2Tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a e2tree into an rpart object — rpart2Tree","text":"fit e2tree object","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/rpart2Tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a e2tree into an rpart object — rpart2Tree","text":"rpart object. #examples","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/vimp.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Importance — vimp","title":"Variable Importance — vimp","text":"calculate variable importance explainable tree","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/vimp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Importance — vimp","text":"","code":"vimp(fit, data)"},{"path":"https://massimoaria.github.io/e2tree/reference/vimp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Importance — vimp","text":"fit e2tree object data data frame interpret variables named formula.","code":""},{"path":"https://massimoaria.github.io/e2tree/reference/vimp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Importance — vimp","text":"data frame containing variable importance metrics. #examples","code":""},{"path":"https://massimoaria.github.io/e2tree/news/index.html","id":"e2tree-0009000","dir":"Changelog","previous_headings":"","what":"e2tree 0.0.0.9000","title":"e2tree 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
